---
const {
    title,
    description,
    logoSrc,
    logoAlt = "Project Logo",
    techStack = "",
    projectUrl,
    className = "",
} = Astro.props;

const techStackArray = techStack
    ? techStack
          .split(",")
          .map((t: string) => t.trim())
          .filter(Boolean)
    : [];
---

<div class={`relative flex flex-col h-full rounded-xl border bg-card text-card-foreground shadow-sm transition-all hover:shadow-md ${className}`}>
    {
        projectUrl && (
            <a
                href={projectUrl}
                target="_blank"
                rel="noopener noreferrer"
                class="absolute top-3 right-3 inline-flex items-center text-sm text-muted-foreground hover:text-foreground transition-colors z-10"
                aria-label="External link"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                >
                    <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                    <polyline points="15 3 21 3 21 9" />
                    <line x1="10" y1="14" x2="21" y2="3" />
                </svg>
            </a>
        )
    }

    <!-- CardHeader -->
    <div class="flex flex-col space-y-1.5 p-6 pb-0">
        <div class="flex items-center gap-4">
            {
                logoSrc && (
                    <div class="flex-shrink-0 w-16 h-16 rounded-md overflow-hidden bg-muted flex items-center justify-center">
                        <img
                            src={logoSrc}
                            alt={logoAlt}
                            class="w-full h-full object-contain bg-white"
                            loading="lazy"
                            decoding="async"
                        />
                    </div>
                )
            }
            <div
                class="text-2xl font-semibold leading-none tracking-tight flex-1"
            >
                {title}
            </div>
        </div>
        <p class="text-sm text-muted-foreground mt-1">{description}</p>
    </div>

    <!-- CardContent -->
    {
        techStackArray.length > 0 && (
            <div class="p-6 pt-2 mt-auto flex flex-wrap gap-2">
                {techStackArray.map((tech: string) => (
                    <span class="px-2 py-1 text-xs font-medium rounded-full bg-primary/20 text-foreground border border-border">
                        {tech}
                    </span>
                ))}
            </div>
        )
    }
</div>
